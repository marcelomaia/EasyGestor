#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vi:si:et:sw=4:sts=4:ts=4

##
## Copyright (C) 2006 Async Open Source <http://www.async.com.br>
## All rights reserved
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., or visit: http://www.gnu.org/.
##
## Author(s):   Henrique Romano  <henrique@async.com.br>
##

import sys
import optparse
import os

sys.path.append(
    os.path.join(os.path.dirname(__file__), "..", ".."))

from stoqlib.database.synchronization import SynchronizationService
from stoqlib.database.testsuite import provide_database_settings

def get_option_parser():
    """
    Get the option parser used to parse arguments on the command line
    @returns: an optparse.OptionParser
    """

    # Note: only generic command line options here, specific ones
    #       should be added at callsite

    parser = optparse.OptionParser()
    group = optparse.OptionGroup(parser, 'Synchronization server')
    group.add_option('-d', '--dbname',
                      action="store",
                      dest="dbname",
                      help='Database name to use')
    group.add_option('-H', '--hostname',
                      action="store",
                      dest="address",
                      help='Database address to connect to')
    group.add_option('-p', '--port',
                      action="store",
                      dest="port",
                      help='Database port')
    group.add_option('-u', '--username',
                      action="store",
                      dest="username",
                      help='Database username')
    group.add_option('-s', '--station',
                      action="store",
                      dest="station",
                      help='Station name')
    parser.add_option_group(group)
    return parser

parser = get_option_parser()
options, dummy = parser.parse_args(sys.argv[1:])

provide_database_settings(address=options.address, dbname=options.dbname,
                          port=options.port, username=options.username,
                          create=False)

service = SynchronizationService("", 9000)
service.serve()
